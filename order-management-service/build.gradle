plugins {
    id "org.springframework.boot"
    id "org.springframework.cloud.contract"
}

dependencies {
    implementation(project(":contract-sdk"))
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    implementation("org.springframework.cloud:spring-cloud-starter-sleuth")
    implementation("org.springframework.cloud:spring-cloud-starter-zipkin")
    implementation("net.logstash.logback:logstash-logback-encoder")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("io.rest-assured:spring-mock-mvc")
    testImplementation('org.springframework.cloud:spring-cloud-contract-verifier')

}

contracts {
    testFramework = "JUNIT5"
    failOnNoContracts = false
    sourceSet = "contractTest"
    baseClassForTests = "com.mflyyou.contract.order.BaseContractTest"
    contractsDslDir = new File("${projectDir}/src/contractTest/resources")
    baseClassMappings {
        baseClassMapping(".*ordermgmt.order.*", "com.mflyyou.contract.order.BaseContractOrderTest")
    }
}
contractTest.shouldRunAfter test
check.dependsOn contractTest
publishing {
    repositories {
        maven {
            allowInsecureProtocol=true
            url = project.version.endsWith("SNAPSHOT") ? "$mavenSnapshotsUrl" : "$mavenReleaseUrl"
            credentials {
                username = "$mavenUsername"
                password = "$mavenPassword"
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifact bootJar
            artifact verifierStubsJar
        }
    }
}

apply from: "${rootProject.projectDir}/gradle/docker-compose/docker-compose.gradle"